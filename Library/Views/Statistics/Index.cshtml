@{
    bool? isLogged = System.Web.HttpContext.Current.Session["LoggedIn"] as bool?;
    if (!isLogged.HasValue || !isLogged.Value)
    {
        Response.Redirect("Login");
    }
}

<style>
    .arc text {
        font: 10px sans-serif;
        text-anchor: middle;
    }

    .arc path {
        stroke: #fff;
    }

    .bar {
        fill: #ff7e5f;
    }

        .bar:hover {
            fill: #f5ab99;
        }

    .bar2 {
        fill: #2a93d5;
    }

        .bar2:hover {
            fill: #AED9DA;
        }

    .axis--x path {
        display: none;
    }

    .h5 {
        font-size: 26px;
        font-weight: 600;
    }

    #twitter{
        margin-left:600px;
        margin-top:40px
    }
</style>
<div class="row">
    <div class="col-md-4">
        <center>
            <h5 class="h5">Loans Per Book</h5>
        </center>
        <svg id="bar" width="450" height="500"></svg>
    </div>
    <div class="col-md-4">
        <center>
            <h5 class="h5">Books by Genre</h5>
        </center>
        <svg id="pie" width="450" height="500"></svg>
    </div>
    <div class="col-md-4">
        <center>
            <h5 class="h5">Loans Per Customer</h5>
        </center>
        <svg id="bar2" width="450" height="500"></svg>
    </div>
</div>
<div id="twitter">
    <textarea id="txtbox" style="width:300px; height:50px" onblur="quotes()" placeholder="tweet whats new in library"></textarea>
    <a  href="https://twitter.com/share" class="twitter-share-button" data-url="goo.gl/udj2qQ" data-text="">Tweet</a>
</div>
<script>!function (d, s, id) { var js, fjs = d.getElementsByTagName(s)[0], p = /^http:/.test(d.location) ? 'http' : 'https'; if (!d.getElementById(id)) { js = d.createElement(s); js.id = id; js.src = p + '://platform.twitter.com/widgets.js'; fjs.parentNode.insertBefore(js, fjs); } }(document, 'script', 'twitter-wjs');</script>
<script src="https://d3js.org/d3.v4.min.js"></script>
<script>
    function quotes() {
        var txt = document.querySelector('textarea').value;
        var tbutton = document.querySelector('.twitter-share-button');
        if (tbutton) {
            tbutton.parentNode.removeChild(tbutton);
        }
        var newA = document.createElement('a');
        newA.setAttribute('href', 'https://twitter.com/share');
        newA.setAttribute('class', 'twitter-share-button');
        newA.setAttribute('data-url', 'goo.gl/udj2qQ');
        newA.setAttribute('data-text', txt);
        document.getElementById("twitter").appendChild(newA);
        twttr.widgets.load();
    }
</script>
<script>
    (function () {
        var svg = d3.select("#pie"),
            width = +svg.attr("width"),
            height = +svg.attr("height"),
            radius = Math.min(width, height) / 2,
            g = svg.append("g").attr("transform", "translate(" + width / 2 + "," + height / 2 + ")");

        var color = d3.scaleOrdinal(["#72a6c5", "#f9975e", "#f6d966", "#ea75ac", "#73e3ab", "#d896ff", "#ff5656"]);

        var pie = d3.pie()
            .sort(null)
            .value(function (d) { return d.BookCount; });

        var path = d3.arc()
            .outerRadius(radius - 10)
            .innerRadius(0);

        var label = d3.arc()
            .outerRadius(radius - 60)
            .innerRadius(radius - 60);

        $.ajax({
            url: "getBooksByGenre", success: function (result) {
                var data = JSON.parse(result);

                var arc = g.selectAll(".arc")
                    .data(pie(data))
                    .enter().append("g")
                    .attr("class", "arc");

                arc.append("path")
                    .attr("d", path)
                    .attr("fill", function (d) { return color(d.data.Genre); });

                arc.append("text")
                    .attr("transform", function (d) { return "translate(" + label.centroid(d) + ")"; })
                    .attr("dy", "0.35em")
                    .attr("style", "font-size:18px")
                    .text(function (d) {
                        return (d.data.Genre + " - " + d.data.BookCount);
                    });
            }
        });
    })();

    (function () {
        var svg = d3.select("#bar"),
            margin = { top: 20, right: 20, bottom: 30, left: 40 },
            width = +svg.attr("width") - margin.left - margin.right,
            height = +svg.attr("height") - margin.top - margin.bottom;

        var x = d3.scaleBand().rangeRound([0, width]).padding(0.1),
            y = d3.scaleLinear().rangeRound([height, 0]);

        var g = svg.append("g")
            .attr("transform", "translate(" + margin.left + "," + margin.top + ")");


        $.ajax({
            url: "getNumberOfBookLoans", success: function (result) {
                var data = JSON.parse(result);

                x.domain(data.map(function (d) { return d.Book; }));
                y.domain([0, d3.max(data, function (d) { return d.LoanCount; })]);

                g.append("g")
                    .attr("class", "axis axis--x")
                    .attr("transform", "translate(0," + height + ")")
                    .call(d3.axisBottom(x));

                g.append("g")
                    .attr("class", "axis axis--y")
                    .call(d3.axisLeft(y).tickValues(d3.range(0, 10, 1)))
                    .append("text")
                    .attr("transform", "rotate(-90)")
                    .attr("y", 6)
                    .attr("dy", "0.71em")
                    .attr("text-anchor", "end")
                    .text("LoanCount");

                g.selectAll(".bar")
                    .data(data)
                    .enter().append("rect")
                    .attr("class", "bar")
                    .attr("x", function (d) { return x(d.Book); })
                    .attr("y", function (d) { return y(d.LoanCount); })
                    .attr("width", x.bandwidth())
                    .attr("height", function (d) { return height - y(d.LoanCount); });


            }
        });
    })();

    (function () {
        var svg = d3.select("#bar2"),
            margin = { top: 20, right: 20, bottom: 30, left: 40 },
            width = +svg.attr("width") - margin.left - margin.right,
            height = +svg.attr("height") - margin.top - margin.bottom;

        var x = d3.scaleBand().rangeRound([0, width]).padding(0.1),
            y = d3.scaleLinear().rangeRound([height, 0]);

        var g = svg.append("g")
            .attr("transform", "translate(" + margin.left + "," + margin.top + ")");


        $.ajax({
            url: "getNumberOfCustomerLoans", success: function (result) {
                var data = JSON.parse(result);

                x.domain(data.map(function (d) { return d.Customer; }));
                y.domain([0, d3.max(data, function (d) { return d.LoanCount; })]);

                g.append("g")
                    .attr("class", "axis axis--x")
                    .attr("transform", "translate(0," + height + ")")
                    .call(d3.axisBottom(x));

                g.append("g")
                    .attr("class", "axis axis--y")
                    .call(d3.axisLeft(y).tickValues(d3.range(0, 10, 1)))
                    .append("text")
                    .attr("transform", "rotate(-90)")
                    .attr("y", 6)
                    .attr("dy", "0.71em")
                    .attr("text-anchor", "end")
                    .text("LoanCount");

                g.selectAll(".bar2")
                    .data(data)
                    .enter().append("rect")
                    .attr("class", "bar2")
                    .attr("x", function (d) { return x(d.Customer); })
                    .attr("y", function (d) { return y(d.LoanCount); })
                    .attr("width", x.bandwidth())
                    .attr("height", function (d) { return height - y(d.LoanCount); });


            }
        });
    })()
</script>
