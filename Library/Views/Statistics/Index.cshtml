@{
    bool? isLogged = System.Web.HttpContext.Current.Session["LoggedIn"] as bool?;
    if (!isLogged.HasValue || !isLogged.Value)
    {
        Response.Redirect("Login");
    }
}

<style>
    .arc text {
        font: 10px sans-serif;
        text-anchor: middle;
    }

    .arc path {
        stroke: #fff;
    }

    .bar {
        fill: steelblue;
    }

        .bar:hover {
            fill: brown;
        }

    .axis--x path {
        display: none;
    }
</style>
<svg id="pie" width="960" height="500"></svg>
<svg id="bar" width="960" height="500"></svg>
<script src="https://d3js.org/d3.v4.min.js"></script>
<script>
(function () {
var svg = d3.select("#pie"),
    width = +svg.attr("width"),
    height = +svg.attr("height"),
    radius = Math.min(width, height) / 2,
    g = svg.append("g").attr("transform", "translate(" + width / 2 + "," + height / 2 + ")");

var color = d3.scaleOrdinal(["#98abc5", "#8a89a6", "#7b6888", "#6b486b", "#a05d56", "#d0743c", "#ff8c00"]);

var pie = d3.pie()
    .sort(null)
    .value(function(d) { return d.BookCount; });

var path = d3.arc()
    .outerRadius(radius - 10)
    .innerRadius(0);

var label = d3.arc()
    .outerRadius(radius - 40)
    .innerRadius(radius - 40);


$.ajax({
    url: "getBooksByGenre", success: function (result) {
        var data = JSON.parse(result);

        var arc = g.selectAll(".arc")
          .data(pie(data))
          .enter().append("g")
            .attr("class", "arc");

        arc.append("path")
            .attr("d", path)
            .attr("fill", function (d) { return color(d.data.Genre); });

        arc.append("text")
            .attr("transform", function (d) { return "translate(" + label.centroid(d) + ")"; })
            .attr("dy", "0.35em")
            .text(function (d) { return d.data.Genre; });
    }
});
})();

(function() {
var svg = d3.select("#bar"),
    margin = {top: 20, right: 20, bottom: 30, left: 40},
    width = +svg.attr("width") - margin.left - margin.right,
    height = +svg.attr("height") - margin.top - margin.bottom;

var x = d3.scaleBand().rangeRound([0, width]).padding(0.1),
    y = d3.scaleLinear().rangeRound([height, 0]);

var g = svg.append("g")
    .attr("transform", "translate(" + margin.left + "," + margin.top + ")");

$.ajax({
    url: "getNumberOfBookLoans", success: function (result) {
        var data = JSON.parse(result);

        x.domain(data.map(function(d) { return d.Book; }));
        y.domain([0, d3.max(data, function(d) { return d.LoanCount; })]);

        g.append("g")
            .attr("class", "axis axis--x")
            .attr("transform", "translate(0," + height + ")")
            .call(d3.axisBottom(x));

        g.append("g")
            .attr("class", "axis axis--y")
            .call(d3.axisLeft(y).ticks(10, "%"))
        .append("text")
            .attr("transform", "rotate(-90)")
            .attr("y", 6)
            .attr("dy", "0.71em")
            .attr("text-anchor", "end")
            .text("LoanCount");

        g.selectAll(".bar")
        .data(data)
        .enter().append("rect")
            .attr("class", "bar")
            .attr("x", function(d) { return x(d.Book); })
            .attr("y", function(d) { return y(d.LoanCount); })
            .attr("width", x.bandwidth())
            .attr("height", function(d) { return height - y(d.LoanCount); });
    }
});
})()
</script>