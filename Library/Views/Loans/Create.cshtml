@model Library.Models.Loan

@{
    ViewBag.Title = "Create";
}

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div>
        @Html.ActionLink(" Back", "Index", "", new { @class = "glyphicon glyphicon-chevron-left Icon" })
    </div>
    <h4>Loan book</h4>
    <hr />

    <div class="form-horizontal">

        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <div style="margin-bottom:10px">
            @Html.LabelFor(model => model.Customer.PersonalID, htmlAttributes: new { @style = "margin-bottom:5px" })
            <div>
                @Html.DropDownList("CustomerId", null, htmlAttributes: new { @class = "form-control", @id="CustomerId", @onchange= "getRecommendedBook()" })
                @Html.ValidationMessageFor(model => model.Customer.PersonalID, "", new { @class = "text-danger" })
            </div>
        </div>

        <div style="margin-bottom:10px">
            @Html.LabelFor(model => model.Book.Name, htmlAttributes: new { @style = "margin-bottom:5px" })
            <div>
                @Html.DropDownList("BookId", null, htmlAttributes: new { @class = "form-control", @id = "BookId" })
                @Html.ValidationMessageFor(model => model.Book.Name, "", new { @class = "text-danger" })
            </div>
            <span id="rec" style="color:darkred"></span>
        </div>

        <div style="margin-bottom:10px">
            @Html.LabelFor(model => model.LoanDate, "Loan Date", htmlAttributes: new { @style = "margin-bottom:5px" })
            <div>
                @Html.EditorFor(model => model.LoanDate, new { htmlAttributes = new { @class = "form-control", @style = "width:300px", @type = "date" } })
                @Html.ValidationMessageFor(model => model.LoanDate, "", new { @class = "text-danger" })
            </div>
        </div>

        <div style="margin-bottom:10px">
            @Html.LabelFor(model => model.ReturnDate, "Return Date", htmlAttributes: new { @style = "margin-bottom:5px" })
            <div>
                @Html.EditorFor(model => model.ReturnDate, new { htmlAttributes = new { @class = "form-control", @style = "width:300px", @type = "date" } })
                @Html.ValidationMessageFor(model => model.ReturnDate, "", new { @class = "text-danger" })
            </div>
        </div>
        <div>
            <input type="submit" value="Add" class="btn btn-success" style="width:100%;margin-top:10px" />
        </div>
    </div>
}

<script>
    function getRecommendedBook() {
        var customers = document.getElementById('CustomerId');
        var custId = customers.options[customers.selectedIndex].text;
        $.ajax({
            url: 'getRecommendedBook/?CustomerId=' + custId,
            success: function (data) {
                if (data !== "There is no recommended book for this customer.") {
                    var books = document.getElementById('BookId');
                    var selectedIndex = -1;
                    for (var i = 0; i < books.options.length; i++) {
                        if (books.options[i].text === data) {
                            books.selectedIndex = i;
                            break;
                        }
                    }
                    document.getElementById("rec").innerHTML = "The recommended book is already chosen"
                } else {
                    document.getElementById("rec").innerHTML = "No recommendations for this cutomer"
                }
            }
        });
    }

    getRecommendedBook();

</script>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
